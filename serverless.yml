# Welcome to Serverless!
#
# This file is the main config file for your service.
# It's very minimal at this point and uses default values.
# You can always add more config options for more control.
# We've included some commented out config examples here.
# Just uncomment any of them to get that config option.
#
# For full config options, check the docs:
#    docs.serverless.com
#
# Happy Coding!

service: infosforyou-bot-fb

# You can pin your service to only deploy with a specific Serverless version
# Check out our docs for more details
# frameworkVersion: "=X.X.X"

provider:
  name: aws
  runtime: nodejs12.x
  region: eu-central-1
  stage: ${file(config/env.js):stage}
  environment: ${file(config/env.js):env}
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource: "arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/${self:service}-${self:provider.stage}-*"
    - Effect: Allow
      Action:
        - cloudwatch:PutMetricData
      Resource: "*"
    - Effect: Allow
      Action:
        - states:StartExecution
      Resource: "arn:aws:states:#{AWS::Region}:#{AWS::AccountId}:stateMachine:${self:service}-${self:provider.stage}-*"
    - Effect: Allow
      Action:
        - translate:TranslateText
      Resource: "*"
    - Effect: Allow
      Action:
        - comprehend:DetectDominantLanguage
      Resource: "*"
    - Effect: Allow
      Action:
        - lex:PostText
      Resource: "arn:aws:lex:eu-west-1:#{AWS::AccountId}:bot:INFOSforyou:*"

functions:
  hello:
    handler: entrypoint/hello.hello
    events:
      - http:
          path: hello
          method: get

  fbVerify:
    handler: entrypoint/fb.verify
    events:
      - http:
          path: fb
          method: get
  fbMessage:
    handler: entrypoint/fb.message
    timeout: 25
    events:
      - http:
          path: fb
          method: post
  fbAttachment:
    handler: entrypoint/fb.attachment
    timeout: 30
    events:
      - http:
          path: attachment
          method: post
  fbPushFetch:
    handler: entrypoint/fbPush.fetch
    timeout: 300
  fbPushSend:
    handler: entrypoint/fbPush.send
    timeout: 300
  fbPushFinish:
    handler: entrypoint/fbPush.finish
    timeout: 300
  fbPushProxy:
    handler: entrypoint/fbPush.proxy
    environment:
      statemachine_arn: "arn:aws:states:#{AWS::Region}:#{AWS::AccountId}:stateMachine:${self:service}-${self:provider.stage}-batchedBroadcast"
    events:
      - http:
          path: sendReport
          method: post

stepFunctions:
  stateMachines:
    batchedBroadcast:
      name: ${self:service}-${self:provider.stage}-batchedBroadcast
      definition:
        StartAt: fetching
        States:
          fetching:
            Type: Task
            Resource: "arn:aws:lambda:#{AWS::Region}:#{AWS::AccountId}:function:${self:service}-${self:provider.stage}-fbPushFetch"
            Next: loop
          loop:
            Type: Choice
            Choices:
              - Variable: "$.state"
                StringEquals: "nextBatch"
                Next: sending
              - Variable: "$.state"
                StringEquals: "finished"
                Next: finished
          sending:
            Type: Task
            Resource: "arn:aws:lambda:#{AWS::Region}:#{AWS::AccountId}:function:${self:service}-${self:provider.stage}-fbPushSend"
            Next: loop
          finished:
            Type: Task
            Resource: "arn:aws:lambda:#{AWS::Region}:#{AWS::AccountId}:function:${self:service}-${self:provider.stage}-fbPushFinish"
            End: true

custom:
  webpack:
    includeModules:
      forceInclude:
        - source-map-support
      forceExclude:
        - aws-sdk
  sentry:
    dsn: ${file(config/env.js):env.SENTRY_DSN}

plugins:
  - serverless-plugin-scripts
  - serverless-pseudo-parameters
  - serverless-step-functions
  - serverless-webpack
  - serverless-sentry

# you can add CloudFormation resource templates here
#resources:
#  Resources:
#    NewResource:
#      Type: AWS::S3::Bucket
#      Properties:
#        BucketName: my-new-bucket
#  Outputs:
#     NewOutput:
#       Description: "Description for the output"
#       Value: "Some output value"

resources:
  Resources: ${file(config/env.js):resources}
